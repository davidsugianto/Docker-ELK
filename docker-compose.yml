---

version: '3.5'

networks:
  elk:
    driver: bridge

services:

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
    hostname: elasticsearch
    restart: always
    environment:
      - 'TZ=${TIMEZONE}'
      - 'ES_JAVA_OPTS=-Xmx1g -Xms1g'
      - 'ELASTIC_PASSWORD=elastic'
    networks:
      - elk
    ports:
      - "9200:9200"
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./data/elasticsearch:/usr/share/elasticsearch/data/:rw

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:7.4.2
    hostname: logstash
    restart: always
    environment:
      - 'TZ=${TIMEZONE}'
      - 'LS_JAVA_OPTS=-Xmx1g -Xms1g'
    networks:
      - elk
    ports:
      - "5044:5044"
    depends_on: 
      - elasticsearch
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./logs/logstash:/home/proxy_logs:ro

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.4.2
    hostname: kibana
    restart: always
    environment:
      - 'TZ=${TIMEZONE}'
    networks:
      - elk
    expose:
      - '5601'
    depends_on: 
      - elasticsearch
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro

  httpd:
    container_name: nginx
    image: bitnami/nginx:${NGINX_VERSION}-${OS_VERSION}
    hostname: nginx
    restart: always
    environment:
      - 'TZ=${TIMEZONE}'
    depends_on:
      - kibana
    networks:
      - elk
    ports:
      - '80:8080'
      - '443:8443'
    volumes:
      - ./config/nginx/vhost/elk.conf:/opt/bitnami/nginx/conf/vhosts/elk.conf:ro
      - ./logs/nginx/${NGINX_VERSION}:/opt/bitnami/nginx/logs:rw
